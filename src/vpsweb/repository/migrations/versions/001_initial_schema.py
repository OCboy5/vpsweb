"""Initial 4-table schema for v0.3.1 prototype

Revision ID: 001_initial_schema
Revises:
Create Date: 2025-01-19 12:00:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "001_initial_schema"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create poems table
    op.create_table(
        "poems",
        sa.Column("id", sa.String(length=26), nullable=False),
        sa.Column("poet_name", sa.String(length=200), nullable=False),
        sa.Column("poem_title", sa.String(length=300), nullable=False),
        sa.Column("source_language", sa.String(length=10), nullable=False),
        sa.Column("original_text", sa.Text(), nullable=False),
        sa.Column("metadata_json", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_poems_id"), "poems", ["id"], unique=False)
    op.create_index(op.f("ix_poems_poet_name"), "poems", ["poet_name"], unique=False)
    op.create_index(op.f("ix_poems_poem_title"), "poems", ["poem_title"], unique=False)
    op.create_index(
        op.f("ix_poems_source_language"), "poems", ["source_language"], unique=False
    )
    op.create_index("idx_poems_created_at", "poems", ["created_at"], unique=False)

    # Create translations table
    op.create_table(
        "translations",
        sa.Column("id", sa.String(length=26), nullable=False),
        sa.Column("poem_id", sa.String(length=26), nullable=False),
        sa.Column("translator_type", sa.String(length=10), nullable=False),
        sa.Column("translator_info", sa.String(length=200), nullable=True),
        sa.Column("target_language", sa.String(length=10), nullable=False),
        sa.Column("translated_text", sa.Text(), nullable=False),
        sa.Column("quality_rating", sa.Integer(), nullable=True),
        sa.Column("raw_path", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["poem_id"], ["poems.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_translations_id"), "translations", ["id"], unique=False)
    op.create_index(
        op.f("ix_translations_poem_id"), "translations", ["poem_id"], unique=False
    )
    op.create_index(
        op.f("ix_translations_translator_type"),
        "translations",
        ["translator_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_translations_target_language"),
        "translations",
        ["target_language"],
        unique=False,
    )
    op.create_index(
        "idx_translations_created_at", "translations", ["created_at"], unique=False
    )

    # Create ai_logs table
    op.create_table(
        "ai_logs",
        sa.Column("id", sa.String(length=26), nullable=False),
        sa.Column("translation_id", sa.String(length=26), nullable=False),
        sa.Column("model_name", sa.String(length=100), nullable=False),
        sa.Column("workflow_mode", sa.String(length=20), nullable=False),
        sa.Column("token_usage_json", sa.Text(), nullable=True),
        sa.Column("cost_info_json", sa.Text(), nullable=True),
        sa.Column("runtime_seconds", sa.Float(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["translation_id"], ["translations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ai_logs_id"), "ai_logs", ["id"], unique=False)
    op.create_index(
        op.f("ix_ai_logs_translation_id"), "ai_logs", ["translation_id"], unique=False
    )
    op.create_index(
        op.f("ix_ai_logs_model_name"), "ai_logs", ["model_name"], unique=False
    )
    op.create_index(
        op.f("ix_ai_logs_workflow_mode"), "ai_logs", ["workflow_mode"], unique=False
    )
    op.create_index("idx_ai_logs_created_at", "ai_logs", ["created_at"], unique=False)

    # Create human_notes table
    op.create_table(
        "human_notes",
        sa.Column("id", sa.String(length=26), nullable=False),
        sa.Column("translation_id", sa.String(length=26), nullable=False),
        sa.Column("note_text", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["translation_id"], ["translations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_human_notes_id"), "human_notes", ["id"], unique=False)
    op.create_index(
        op.f("ix_human_notes_translation_id"),
        "human_notes",
        ["translation_id"],
        unique=False,
    )
    op.create_index(
        "idx_human_notes_created_at", "human_notes", ["created_at"], unique=False
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_human_notes_created_at", table_name="human_notes")
    op.drop_index(op.f("ix_human_notes_translation_id"), table_name="human_notes")
    op.drop_index(op.f("ix_human_notes_id"), table_name="human_notes")
    op.drop_table("human_notes")
    op.drop_index("idx_ai_logs_created_at", table_name="ai_logs")
    op.drop_index(op.f("ix_ai_logs_workflow_mode"), table_name="ai_logs")
    op.drop_index(op.f("ix_ai_logs_model_name"), table_name="ai_logs")
    op.drop_index(op.f("ix_ai_logs_translation_id"), table_name="ai_logs")
    op.drop_index(op.f("ix_ai_logs_id"), table_name="ai_logs")
    op.drop_table("ai_logs")
    op.drop_index("idx_translations_created_at", table_name="translations")
    op.drop_index(op.f("ix_translations_target_language"), table_name="translations")
    op.drop_index(op.f("ix_translations_translator_type"), table_name="translations")
    op.drop_index(op.f("ix_translations_poem_id"), table_name="translations")
    op.drop_index(op.f("ix_translations_id"), table_name="translations")
    op.drop_table("translations")
    op.drop_index("idx_poems_created_at", table_name="poems")
    op.drop_index(op.f("ix_poems_source_language"), table_name="poems")
    op.drop_index(op.f("ix_poems_poem_title"), table_name="poems")
    op.drop_index(op.f("ix_poems_poet_name"), table_name="poems")
    op.drop_index(op.f("ix_poems_id"), table_name="poems")
    op.drop_table("poems")
    # ### end Alembic commands ###
